apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'org.jetbrains.kotlin.plugin.compose'
apply plugin: 'com.google.gms.google-services'


def SECURE_TOKEN_FIELDNAME = "SECURE_TOKEN"
def API_ENDPOINT_FIELDNAME = "API_ENDPOINT"
def KEY_PASSWORD_FIELDNAME = "KEY_PASSWORD";
def KEY_ALIAS_FIELDNAME = "KEY_ALIAS"
def KEYSTORE_PASSWORD_FIELDNAME = "KEYSTORE_PASSWORD"
def AWS_ACCESS_KEY_FIELDNAME = "AWS_ACCESS_KEY"
def AWS_SECRET_KEY_FIELDNAME = "AWS_SECRET_ACCESS_KEY"
def AWS_S3_BUCKET_NAME_UPDATE_APP_FIELDNAME = "AWS_S3_BUCKET_NAME_UPDATE_APP"
def AWS_S3_BUCKET_REGION_UPDATE_APP_FIELDNAME = "AWS_S3_BUCKET_REGION_UPDATE_APP"

android {
    namespace "io.github.miguelteles.beststickerapp"
    //the compression of webp file during build causes problem with FileDescriptor in ContentProvider.
    aaptOptions {
        noCompress "webp"
    }
    compileSdkVersion 35
    defaultConfig {
        applicationId "com.best.stickerapp"
        minSdkVersion 30
        targetSdkVersion 33
        versionCode 10
        versionName "0.9.1"

        def contentProviderAuthority = applicationId + ".stickercontentprovider"
        // Creates a placeholder property to use in the manifest.
        manifestPlaceholders =
                [contentProviderAuthority: contentProviderAuthority]
        // Adds a new field for the authority to the BuildConfig class.
        buildConfigField("String",
                "CONTENT_PROVIDER_AUTHORITY",
                "\"${contentProviderAuthority}\"")

        def secureToken = System.getenv(SECURE_TOKEN_FIELDNAME) != null ? System.getenv(SECURE_TOKEN_FIELDNAME) : "f0a9c3bdeaf2ef5df1be92c6a47ff8eac8470a05d183fb68c4eec0b5c112cd0a"
        buildConfigField "String", SECURE_TOKEN_FIELDNAME, "\"${secureToken}\""

        def apiProductionUrl = System.getenv(API_ENDPOINT_FIELDNAME) != null ? System.getenv(API_ENDPOINT_FIELDNAME) : "https://q7h1mc4qwh.execute-api.sa-east-1.amazonaws.com/prod/"
        buildConfigField "String", API_ENDPOINT_FIELDNAME, "\"${apiProductionUrl}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    signingConfigs {
        release { //trecho usado para assinar o aplicativo no build do Github Action
            storeFile file("release.keystore")
            storePassword System.getenv(KEYSTORE_PASSWORD_FIELDNAME) != null ? System.getenv(KEYSTORE_PASSWORD_FIELDNAME) : "24216971"
            keyPassword System.getenv(KEY_PASSWORD_FIELDNAME) != null ? System.getenv(KEY_PASSWORD_FIELDNAME) : "24216971"
            keyAlias System.getenv(KEY_ALIAS_FIELDNAME) != null ? System.getenv(KEY_ALIAS_FIELDNAME) : "beststickerapp-alias"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    buildFeatures {
        compose true
        buildConfig true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        resources {
            merges += ['META-INF/io.netty.versions.properties']
        }
    }
}

task printVersion {
    doLast {
        println "VERSION_NAME=${android.defaultConfig.versionName}"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.8.0'
    implementation platform('androidx.compose:compose-bom:2024.09.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.activity:activity:1.10.1'
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.09.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    def fresco_version = '3.6.0'
    implementation "com.facebook.fresco:fresco:$fresco_version"
    implementation "com.facebook.fresco:webpsupport:$fresco_version"
    implementation "com.facebook.fresco:animated-webp:$fresco_version"
    implementation "com.facebook.fresco:animated-base:$fresco_version"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation("com.squareup.okhttp3:okhttp:5.1.0")
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.72'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.72.0'
    implementation 'com.amazonaws:aws-android-sdk-core:2.72.0'

    implementation(platform("com.google.firebase:firebase-bom:34.0.0"))
    implementation("com.google.firebase:firebase-analytics")


    testImplementation 'junit:junit:4.13.2'
    // Dependência principal do Mockito
    testImplementation 'org.mockito:mockito-core:5.14.2'
    // Dependência do Mockito para testes no Android
    androidTestImplementation 'org.mockito:mockito-android:2.28.2'
    // Dependência do Mockito para ser possível mockar classes e métodos constantes
    testImplementation 'org.mockito:mockito-inline:2.28.2'
    testImplementation "androidx.test:core:1.6.1" // or newer
    testImplementation 'org.robolectric:robolectric:4.11.1'
}
